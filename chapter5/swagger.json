{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Challenge - Chapter 5",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "mirzahm14@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "users"
    },
    {
      "name": "accounts"
    },
    {
      "name": "transactions"
    },
    {
      "name": "authentications"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create an user",
        "description": "",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create an user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "All fields are required"
          },
          "401": {
            "description": "Email already exist"
          },
          "402": {
            "description": "User failed to created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Get all users from database",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find an user by id",
        "description": "Returns an user with their profile",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create an bank account",
        "description": "",
        "operationId": "createAccount",
        "requestBody": {
          "description": "Create a new bank account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccount"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PostAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "All fields are required"
          },
          "402": {
            "description": "Account failed to created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get all bank accounts",
        "description": "",
        "operationId": "getAllAccounts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Find an account by id",
        "description": "Returns an account with their profile",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Create an transaction",
        "description": "",
        "operationId": "createTransaction",
        "requestBody": {
          "description": "Create a new transaction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransaction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransaction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTransactionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PostTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "All fields are required"
          },
          "402": {
            "description": "Transaction failed to created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get all transactions",
        "description": "",
        "operationId": "getAllTransactions",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse"
                }
              }
            }
          },
          "402": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Find an transaction by id",
        "description": "Returns an transaction with their profile",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "authentications"
        ],
        "summary": "Create a new user using encryption",
        "description": "",
        "operationId": "register",
        "requestBody": {
          "description": "Create a new user",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "example": "John doe"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "example": "John doe"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "example": "John doe"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/RegistResponse"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/RegistResponse"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "All fields are required"
          },
          "401": {
            "description": "Email already exist"
          },
          "402": {
            "description": "User failed to created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentications"
        ],
        "summary": "Login user",
        "description": "",
        "operationId": "login",
        "requestBody": {
          "description": "Try to login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/RegistResponse"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjgsImlhdCI6MTcxMzUzMjU2Mn0.BczwguWdUQF7kWEjwrrKpejMDnwjivXZ2StY11rJKHg"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/RegistResponse"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjgsImlhdCI6MTcxMzUzMjU2Mn0.BczwguWdUQF7kWEjwrrKpejMDnwjivXZ2StY11rJKHg"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/authenticate": {
      "get": {
        "tags": [
          "authentications"
        ],
        "summary": "restrict api",
        "description": "",
        "operationId": "auth",
        "security": [
          {
            "jwt_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "example": 1
                            },
                            "iat": {
                              "example": 12717212
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "example": 1
                            },
                            "iat": {
                              "example": 12717212
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt_auth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT authorization token for accessing protected resources"
      }
    },
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "John@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "identity_type": {
            "type": "string",
            "example": "SIM"
          },
          "identity_number": {
            "type": "string",
            "example": "8823183821"
          },
          "address": {
            "type": "string",
            "example": "New York"
          }
        }
      },
      "PostUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "John@gmail.com"
              },
              "password": {
                "type": "string",
                "example": "12345"
              }
            }
          }
        }
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            }
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "John@gmail.com"
              },
              "password": {
                "type": "string",
                "example": "12345"
              },
              "profile": {
                "type": "object",
                "properties": {
                  "identity_type": {
                    "type": "string",
                    "example": "SIM"
                  },
                  "identity_number": {
                    "type": "string",
                    "example": "8823183821"
                  },
                  "address": {
                    "type": "string",
                    "example": "New York"
                  }
                }
              }
            }
          }
        }
      },
      "CreateAccount": {
        "type": "object",
        "properties": {
          "bank_name": {
            "type": "string",
            "example": "Savings"
          },
          "bank_number": {
            "type": "string",
            "example": "32123121"
          },
          "balance": {
            "type": "number",
            "example": 950000
          },
          "user_id": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "PostAccountResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "bank_name": {
                "type": "string",
                "example": "Savings"
              },
              "bank_number": {
                "type": "string",
                "example": "32123121"
              },
              "balance": {
                "type": "number",
                "example": 950000
              },
              "user_id": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "GetAccountsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "user_id": {
                  "type": "integer",
                  "example": 1
                },
                "bank_account_number": {
                  "type": "string",
                  "example": "82818281"
                }
              }
            }
          }
        }
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "bank_name": {
                "type": "string",
                "example": "Savings"
              },
              "bank_number": {
                "type": "string",
                "example": "32123121"
              },
              "balance": {
                "type": "number",
                "example": 950000
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                  }
                }
              }
            }
          }
        }
      },
      "CreateTransaction": {
        "type": "object",
        "properties": {
          "source_account_id": {
            "type": "integer",
            "example": 1
          },
          "destination_account_id": {
            "type": "integer",
            "example": 2
          },
          "amount": {
            "type": "number",
            "example": 5000000
          }
        }
      },
      "PostTransactionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "source_account_id": {
                "type": "integer",
                "example": 1
              },
              "destination_account_id": {
                "type": "integer",
                "example": 2
              },
              "amount": {
                "type": "number",
                "example": 5000000
              }
            }
          }
        }
      },
      "GetTransactionsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "source_account_id": {
                  "type": "integer",
                  "example": 1
                },
                "destination_account_id": {
                  "type": "integer",
                  "example": 2
                },
                "amount": {
                  "type": "number",
                  "example": 5000000
                }
              }
            }
          }
        }
      },
      "GetTransactionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "source_account_id": {
                "type": "integer",
                "example": 1
              },
              "destination_account_id": {
                "type": "integer",
                "example": 2
              },
              "amount": {
                "type": "string",
                "example": "50000000"
              },
              "source_account": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bank_account_number": {
                    "type": "string",
                    "example": "1000234567"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      }
                    }
                  }
                }
              },
              "destination_account": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 2
                  },
                  "bank_account_number": {
                    "type": "string",
                    "example": "5432100098"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 2
                      },
                      "name": {
                        "type": "string",
                        "example": "Jane Smith"
                      },
                      "email": {
                        "type": "string",
                        "example": "jane.smith@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "John@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "RegistResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "John@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$oWMWAEOyC32qngMdIifkH.WViOwaCkcV3jGbXMGMxows41jBVHgty"
          }
        }
      }
    }
  }
}